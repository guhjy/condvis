Check on Windows 7 gives 1 NOTE

* checking R code for possible problems ... NOTE
opendev: possible error in x11(type = "Xlib", width = width, height =
  height): unused argument (type = "Xlib")

## The possible error in x11 is due to the platform-specific definition of x11
## having different arguments on Windows. x11 can only be called on Unix systems
## in this package, so this will not matter.

Check on Windows 7 --as-cran gives 2 NOTEs

* checking CRAN incoming feasibility ... NOTE
Maintainer: 'Mark O'Connell <mark.oconnell@maths.nuim.ie>'
New submission

## This is the first submission of this package to CRAN, and indeed my first
## one ever!

* checking R code for possible problems ... NOTE
Found an obsolete/platform-specific call in the following function:
  'opendev'
Found the platform-specific devices:
  'windows' 'x11'
dev.new() is the preferred way to open a new device, in the unlikely
event one is needed.
opendev: possible error in x11(type = "Xlib", width = width, height =
  height): unused argument (type = "Xlib")

## The platform-specific calls are necessary for creating interactive graphics.
## The possible error in x11 is due to the platform-specific definition of x11
## having different arguments on Windows. x11 can only be called on Unix systems
## in this package, so this will not matter.

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

Check on Mac (OSX 10.8) gives no ERRORs, WARNINGs, or NOTEs

Check on Mac (OSX 10.8) --as-cran gives 2 NOTEs

* checking CRAN incoming feasibility ... NOTE
Maintainer: ‘Mark O'Connell <mark.oconnell@maths.nuim.ie>’
New submission

## This is the first submission of this package to CRAN, and indeed my first
## one ever!

* checking R code for possible problems ... NOTE
Found an obsolete/platform-specific call in the following function:
  ‘opendev’
Found the platform-specific devices:
  ‘windows’ ‘x11’
dev.new() is the preferred way to open a new device, in the unlikely
event one is needed.

## The platform-specific calls are necessary for creating interactive graphics.

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

Check on Linux (Ubuntu 14) with R 3.2.3 gives 1 NOTE

* checking R code for possible problems ... NOTE
barplot2: possible error in plot.window(xlim, ylim, log = log, ...):
  ... used in a situation where it does not exist
barplot2 : xyrect: possible error in rect(x1, y1, x2, y2, ...): ...
  used in a situation where it does not exist
barplot2 : xyrect: possible error in rect(y1, x1, y2, x2, ...): ...
  used in a situation where it does not exist
barplot2: possible error in axis(if (horiz) 2 else 1, at = at.l, labels
  = names.arg, lty = axis.lty, cex.axis = cex.names, ...): ... used in
  a situation where it does not exist
barplot2: possible error in title(main = main, sub = sub, xlab = xlab,
  ylab = ylab, ...): ... used in a situation where it does not exist
barplot2: possible error in axis(if (horiz) 1 else 2, cex.axis =
  cex.axis, ...): ... used in a situation where it does not exist
conditionselectors: possible error in plotxc(xc = Xc[, C[[i]]], xc.cond
  = Xc.cond[1, C[[i]]], name = C[[i]], select.colour = select.colour,
  select.cex = select.cex, ...): ... used in a situation where it does
  not exist
plotxc: possible error in spineplot2(table(xc), ...): ... used in a
  situation where it does not exist
plotxc: possible error in list(xc = xc, xc.cond.old = xc.cond, name =
  name, select.colour = select.colour, mar = mar, select.lwd =
  select.lwd, select.cex = select.cex, cex.axis = cex.axis, cex.lab =
  cex.lab, tck = tck, device = dev.cur(), usr = par("usr"), screen =
  screen(), screen.coords = par("fig"), plot.type = plot.type, sptmp =
  if (exists("sptmp")) sptmp else NULL, factorcoords = if
  (exists("factorcoords")) factorcoords else NULL, histmp = if
  (exists("histmp")) histmp else NULL, bartmp = if (exists("bartmp"))
  bartmp else NULL, : ... used in a situation where it does not exist
plotxc: possible error in boxtmp = if (exists("boxtmp")) boxtmp else
  NULL, ...): ... used in a situation where it does not exist
predict1: possible error in predict(object, ..., n.trees =
  object$n.trees, type = type): ... used in a situation where it does
  not exist
spineplot2: possible error in rect(xleft, ybottom, xright, ytop, col =
  col, ...): ... used in a situation where it does not exist

## This seems like a bug in the check. Most of this code is actually copied
## from the graphics package.

Check on Linux (Ubuntu 14) with R 3.2.3 --as-cran gives 2 NOTEs

* checking CRAN incoming feasibility ... NOTE
Maintainer: ‘Mark O'Connell <mark.oconnell@maths.nuim.ie>’
New submission

## This is the first submission of this package to CRAN, and indeed my first
## one ever!

* checking R code for possible problems ... NOTE
Found an obsolete/platform-specific call in the following function:
  ‘opendev’
Found the platform-specific devices:
  ‘windows’ ‘x11’
dev.new() is the preferred way to open a new device, in the unlikely
event one is needed.
barplot2: possible error in plot.window(xlim, ylim, log = log, ...):
  ... used in a situation where it does not exist
barplot2 : xyrect: possible error in rect(x1, y1, x2, y2, ...): ...
  used in a situation where it does not exist
barplot2 : xyrect: possible error in rect(y1, x1, y2, x2, ...): ...
  used in a situation where it does not exist
barplot2: possible error in axis(if (horiz) 2 else 1, at = at.l, labels
  = names.arg, lty = axis.lty, cex.axis = cex.names, ...): ... used in
  a situation where it does not exist
barplot2: possible error in title(main = main, sub = sub, xlab = xlab,
  ylab = ylab, ...): ... used in a situation where it does not exist
barplot2: possible error in axis(if (horiz) 1 else 2, cex.axis =
  cex.axis, ...): ... used in a situation where it does not exist
conditionselectors: possible error in plotxc(xc = Xc[, C[[i]]], xc.cond
  = Xc.cond[1, C[[i]]], name = C[[i]], select.colour = select.colour,
  select.cex = select.cex, ...): ... used in a situation where it does
  not exist
plotxc: possible error in spineplot2(table(xc), ...): ... used in a
  situation where it does not exist
plotxc: possible error in list(xc = xc, xc.cond.old = xc.cond, name =
  name, select.colour = select.colour, mar = mar, select.lwd =
  select.lwd, select.cex = select.cex, cex.axis = cex.axis, cex.lab =
  cex.lab, tck = tck, device = dev.cur(), usr = par("usr"), screen =
  screen(), screen.coords = par("fig"), plot.type = plot.type, sptmp =
  if (exists("sptmp")) sptmp else NULL, factorcoords = if
  (exists("factorcoords")) factorcoords else NULL, histmp = if
  (exists("histmp")) histmp else NULL, bartmp = if (exists("bartmp"))
  bartmp else NULL, : ... used in a situation where it does not exist
plotxc: possible error in boxtmp = if (exists("boxtmp")) boxtmp else
  NULL, ...): ... used in a situation where it does not exist
predict1: possible error in predict(object, ..., n.trees =
  object$n.trees, type = type): ... used in a situation where it does
  not exist
spineplot2: possible error in rect(xleft, ybottom, xright, ytop, col =
  col, ...): ... used in a situation where it does not exist

## The platform-specific calls are necessary for creating interactive graphics.
## The rest seems like a bug in the check. Most of this code is actually copied
## from the graphics package.
